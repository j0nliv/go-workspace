1- Create a first mod file in greetings folder;

$ go mod init example.com/greetings
go: creating new go.mod: module example.com/greetings

1.1- First module source code (greetings.go); 

package greetings

import "fmt"

func Hello(name string) string {
    message := fmt.Sprintf("Hi, %v. Welcome!", name)
    return message
}

2- Create a second mod file in hello folder;

$ go mod init example.com/hello
go: creating new go.mod: module example.com/hello

2.1- Main module source code (hello.go);


package main

import (
    "fmt"

    "example.com/greetings"
)

func main() {
    message := greetings.Hello("Gladys")
    fmt.Println(message)
}

3- Use the go mod edit command to edit the example.com/hello module to redirect Go tools from its module path (where the module isn't) to the local directory (where it is);


$ go mod edit -replace example.com/greetings=../greetings


4- Follow the command to synchronize the example.com/hello module's dependencies, adding those required by the code, but not yet tracked in the module;

$ go mod tidy
go: found example.com/greetings in example.com/greetings v0.0.0-00010101000000-000000000000